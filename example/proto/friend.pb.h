// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: friend.proto

#ifndef PROTOBUF_INCLUDED_friend_2eproto
#define PROTOBUF_INCLUDED_friend_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_friend_2eproto 

namespace protobuf_friend_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_friend_2eproto
namespace biz {
class GetFriendListsAck;
class GetFriendListsAckDefaultTypeInternal;
extern GetFriendListsAckDefaultTypeInternal _GetFriendListsAck_default_instance_;
class GetFriendListsReq;
class GetFriendListsReqDefaultTypeInternal;
extern GetFriendListsReqDefaultTypeInternal _GetFriendListsReq_default_instance_;
}  // namespace biz
namespace google {
namespace protobuf {
template<> ::biz::GetFriendListsAck* Arena::CreateMaybeMessage<::biz::GetFriendListsAck>(Arena*);
template<> ::biz::GetFriendListsReq* Arena::CreateMaybeMessage<::biz::GetFriendListsReq>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace biz {

// ===================================================================

class GetFriendListsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:biz.GetFriendListsReq) */ {
 public:
  GetFriendListsReq();
  virtual ~GetFriendListsReq();

  GetFriendListsReq(const GetFriendListsReq& from);

  inline GetFriendListsReq& operator=(const GetFriendListsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFriendListsReq(GetFriendListsReq&& from) noexcept
    : GetFriendListsReq() {
    *this = ::std::move(from);
  }

  inline GetFriendListsReq& operator=(GetFriendListsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendListsReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFriendListsReq* internal_default_instance() {
    return reinterpret_cast<const GetFriendListsReq*>(
               &_GetFriendListsReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GetFriendListsReq* other);
  friend void swap(GetFriendListsReq& a, GetFriendListsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFriendListsReq* New() const final {
    return CreateMaybeMessage<GetFriendListsReq>(NULL);
  }

  GetFriendListsReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetFriendListsReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetFriendListsReq& from);
  void MergeFrom(const GetFriendListsReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFriendListsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:biz.GetFriendListsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_friend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFriendListsAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:biz.GetFriendListsAck) */ {
 public:
  GetFriendListsAck();
  virtual ~GetFriendListsAck();

  GetFriendListsAck(const GetFriendListsAck& from);

  inline GetFriendListsAck& operator=(const GetFriendListsAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFriendListsAck(GetFriendListsAck&& from) noexcept
    : GetFriendListsAck() {
    *this = ::std::move(from);
  }

  inline GetFriendListsAck& operator=(GetFriendListsAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendListsAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFriendListsAck* internal_default_instance() {
    return reinterpret_cast<const GetFriendListsAck*>(
               &_GetFriendListsAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetFriendListsAck* other);
  friend void swap(GetFriendListsAck& a, GetFriendListsAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFriendListsAck* New() const final {
    return CreateMaybeMessage<GetFriendListsAck>(NULL);
  }

  GetFriendListsAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetFriendListsAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetFriendListsAck& from);
  void MergeFrom(const GetFriendListsAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFriendListsAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes friends = 2;
  int friends_size() const;
  void clear_friends();
  static const int kFriendsFieldNumber = 2;
  const ::std::string& friends(int index) const;
  ::std::string* mutable_friends(int index);
  void set_friends(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_friends(int index, ::std::string&& value);
  #endif
  void set_friends(int index, const char* value);
  void set_friends(int index, const void* value, size_t size);
  ::std::string* add_friends();
  void add_friends(const ::std::string& value);
  #if LANG_CXX11
  void add_friends(::std::string&& value);
  #endif
  void add_friends(const char* value);
  void add_friends(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& friends() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_friends();

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:biz.GetFriendListsAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> friends_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_friend_2eproto::TableStruct;
};
// ===================================================================

class FriendServiceRpc_Stub;

class FriendServiceRpc : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline FriendServiceRpc() {};
 public:
  virtual ~FriendServiceRpc();

  typedef FriendServiceRpc_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GetFriendLists(::google::protobuf::RpcController* controller,
                       const ::biz::GetFriendListsReq* request,
                       ::biz::GetFriendListsAck* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FriendServiceRpc);
};

class FriendServiceRpc_Stub : public FriendServiceRpc {
 public:
  FriendServiceRpc_Stub(::google::protobuf::RpcChannel* channel);
  FriendServiceRpc_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~FriendServiceRpc_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements FriendServiceRpc ------------------------------------------

  void GetFriendLists(::google::protobuf::RpcController* controller,
                       const ::biz::GetFriendListsReq* request,
                       ::biz::GetFriendListsAck* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FriendServiceRpc_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetFriendListsReq

// uint32 uid = 1;
inline void GetFriendListsReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GetFriendListsReq::uid() const {
  // @@protoc_insertion_point(field_get:biz.GetFriendListsReq.uid)
  return uid_;
}
inline void GetFriendListsReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:biz.GetFriendListsReq.uid)
}

// -------------------------------------------------------------------

// GetFriendListsAck

// int32 result = 1;
inline void GetFriendListsAck::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 GetFriendListsAck::result() const {
  // @@protoc_insertion_point(field_get:biz.GetFriendListsAck.result)
  return result_;
}
inline void GetFriendListsAck::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:biz.GetFriendListsAck.result)
}

// repeated bytes friends = 2;
inline int GetFriendListsAck::friends_size() const {
  return friends_.size();
}
inline void GetFriendListsAck::clear_friends() {
  friends_.Clear();
}
inline const ::std::string& GetFriendListsAck::friends(int index) const {
  // @@protoc_insertion_point(field_get:biz.GetFriendListsAck.friends)
  return friends_.Get(index);
}
inline ::std::string* GetFriendListsAck::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:biz.GetFriendListsAck.friends)
  return friends_.Mutable(index);
}
inline void GetFriendListsAck::set_friends(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:biz.GetFriendListsAck.friends)
  friends_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetFriendListsAck::set_friends(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:biz.GetFriendListsAck.friends)
  friends_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetFriendListsAck::set_friends(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  friends_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:biz.GetFriendListsAck.friends)
}
inline void GetFriendListsAck::set_friends(int index, const void* value, size_t size) {
  friends_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:biz.GetFriendListsAck.friends)
}
inline ::std::string* GetFriendListsAck::add_friends() {
  // @@protoc_insertion_point(field_add_mutable:biz.GetFriendListsAck.friends)
  return friends_.Add();
}
inline void GetFriendListsAck::add_friends(const ::std::string& value) {
  friends_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:biz.GetFriendListsAck.friends)
}
#if LANG_CXX11
inline void GetFriendListsAck::add_friends(::std::string&& value) {
  friends_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:biz.GetFriendListsAck.friends)
}
#endif
inline void GetFriendListsAck::add_friends(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  friends_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:biz.GetFriendListsAck.friends)
}
inline void GetFriendListsAck::add_friends(const void* value, size_t size) {
  friends_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:biz.GetFriendListsAck.friends)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetFriendListsAck::friends() const {
  // @@protoc_insertion_point(field_list:biz.GetFriendListsAck.friends)
  return friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetFriendListsAck::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:biz.GetFriendListsAck.friends)
  return &friends_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace biz

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_friend_2eproto
